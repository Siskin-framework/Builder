;~ Siskin project nest file ~;
github: @Rebol
nest:   %Rebol/make/rebol3.nest
compiler: gcc

make-siskin: [
	product:  Siskin
	strip:    on
	#if Windows? [upx: on ]
	#if Posix?   [upx: off]
	
	output:   %../Siskin/build/

	:include-mezz-ansi
	:include-codec-ico
	:include-codec-zip
	:include-prot-https
	:include-prebol
	:common
	:common-host
	
	mezz-lib-files: [
		%../../Siskin/prebol.reb
		%../../Siskin/siskin-make.reb
		%../../Siskin/siskin-msvc.reb
		%../../Siskin/siskin-xcode.reb
		%../../Siskin/siskin.reb ; must be last!
	]
	boot-host-files: [
		%../../Siskin/siskin-do.reb
	]

	#if Windows? [resource: %../Siskin/siskin.rc]

	define: REB_EXE
	define: RAW_MAIN_ARGS
	define: CUSTOM_STARTUP
	do %make/pre-make.r3 "$NEST_SPEC"
]
make-siskin-x86: [:make-siskin :arch-x86 #if windows? [target: x86-win32]]
make-siskin-x64: [:make-siskin :arch-x64 #if windows? [target: x64-win32]]
make-siskin-arm: [:make-siskin :arch-arm64]

eggs: only [
	#if Windows? [
		"Siskin x86" [
			name:     %Siskin-x86
			:make-siskin-x86
		]
		"Siskin x64" [
			name:     %Siskin-x64
			:make-siskin-x64
		]
	]
	#if Linux? [
		"Siskin x86" [
			name:     %Siskin-x86-libc
			:make-siskin-x86
		]
		"Siskin x64" [
			name:     %Siskin-x64-libc
			:make-siskin-x64
		]
	]
	#if macOS? [
		"Siskin x86" [
			name:     %Siskin-x86-osx
			compiler: clang
			:make-siskin-x86
		]
		"Siskin x64" [
			name:     %Siskin-x64-osx
			compiler: clang
			:make-siskin-x64
		]
		"Siskin arm64" [
			name:     %Siskin-arm-osx
			compiler: clang
			:make-siskin-arm
		]
	]
	#if OpenBSD? [
		"Siskin x64" [
			name:     %Siskin-x64-openbsd
			:make-siskin-x64
			:target-openbsd
		]
	]
	#if FreeBSD? [
		"Siskin x64" [
			name:     %Siskin-x64-freebsd
			:make-siskin-x64
			:target-freebsd
		]
	]
]
