;-    .-.                                                                       
;-   /'v'\   SISKIN-Builder project file                                        
;-  (/uOu\)  https://github.com/Siskin-framework/Builder/                       
;-===="="=======================================================================

name: "Sokol"

github: floooh/sokol
github: floooh/sokol-samples
github: floooh/sokol-tools-bin
;github: floooh/cimgui-sokol-starterkit
;github: floooh/libmodplug
;github: ocornut/imgui
github: floooh/dcimgui
;github: guillaumeblanc/ozz-animation

strip:    true
arch:     x64
temp-dir: %tmp/
output:   %bin/

compiler: clang

#if Windows? [define:  _CRT_SECURE_NO_WARNINGS]
#if Posix? [
	cppflag: "-std=c++14"
]

include: %sokol/

flags: [
	;-mwindows ;no console - using windows subsystem
	;-municode
]

;compiler: clang

common-glfw: [
	files: [
		%sokol-samples/glfw/flextgl/flextGL
	]
	includes: [
		%../glfw/glfw/include/
	]
	;libs:    [%kernel32 %msvcrt %user32]
	libs: [
		%opengl32
		%../glfw/release-x64/
		%glfw3
		%gdi32
	]
	;defines: [WIN32]
	;flags: [-mwindows]
	defines: [
		USE_GLFW
		; GLFW_DLL
	]

]

common-imgui: [
	include: %dcimgui/src/
	;#if Windows? [
	;	compiler: x86_64-w64-mingw32-g++
	;]
	files: [
		%dcimgui/src/imgui.cpp
		%dcimgui/src/imgui_draw.cpp
		%dcimgui/src/imgui_tables.cpp
		%dcimgui/src/imgui_widgets.cpp
	]
	lflag:   "-lstdc++"
	;cflags: [-fno-threadsafe-statics]
	;cflags: [-fpermissive]
]
common-cimgui: [
	:common-imgui
	files: [
		%dcimgui/src/imgui_demo.cpp
		%dcimgui/src/cimgui.cpp
	]
]
common-imgui-dock: [
	include: %dcimgui/src-docking/
	;#if Windows? [
	;	compiler: x86_64-w64-mingw32-g++
	;]
	files: [
		%dcimgui/src-docking/imgui.cpp
		%dcimgui/src-docking/imgui_draw.cpp
		%dcimgui/src-docking/imgui_tables.cpp
		%dcimgui/src-docking/imgui_widgets.cpp
		;%dcimgui/src-docking/cimgui.cpp
	]
	lflag:   "-lstdc++"
	;cflags: [-fno-threadsafe-statics]
	;cflags: [-fpermissive]
]
common-dbgui: [
	:common-imgui
	;compiler: gcc
	file: %sokol-samples/libs/dbgui/dbgui.cc
	defines: [USE_DBG_UI]
]

common-basisu: [
	#if Windows? [
		compiler: clang
	]
	files: [
		;%sokol-samples/libs/basisu/basisu_transcoder.cpp
		%sokol-samples/libs/basisu/sokol_basisu.cpp
	]
	include: [
		%sokol-samples/libs/basisu/
	]
	defines: [BASISD_SUPPORT_BC7=0]
]

common-d3d11: [
	files: [
		%sokol-samples/d3d11/d3d11entry.c
	]
	includes: [
		;Official mingw distro seems not to be up to date
		;%/x/MingW/mingw-w64-headers/direct-x/include/ 
		;Headers above downloaded from: https://sourceforge.net/p/mingw-w64/mingw-w64/ci/master/tarball?path=/mingw-w64-headers
	]
	libs: [%D3D11 %d3dx11_43 %uuid %d3dcompiler_43]
	defines: [USE_D3D11]
]

common-emsc: [
	compiler: emcc
	bin-extension: html
	flags:  only [-Os]
	lflags: [
		{-s USE_WEBGL2=1 -s FULL_ES3=1}
		{-s WASM=1}
		{--closure 1}
		{-s "MALLOC='emmalloc'"}         ;EMSCRIPTEN_USE_EMMALLOC
	]
	strip: off
]

common-spine: [
	files:   [
		%sokol-samples/libs/spine-c/src/spine/Animation.c
		%sokol-samples/libs/spine-c/src/spine/AnimationState.c
		%sokol-samples/libs/spine-c/src/spine/AnimationStateData.c
		%sokol-samples/libs/spine-c/src/spine/Array.c
		%sokol-samples/libs/spine-c/src/spine/Atlas.c
		%sokol-samples/libs/spine-c/src/spine/AtlasAttachmentLoader.c
		%sokol-samples/libs/spine-c/src/spine/Attachment.c
		%sokol-samples/libs/spine-c/src/spine/AttachmentLoader.c
		%sokol-samples/libs/spine-c/src/spine/Bone.c
		%sokol-samples/libs/spine-c/src/spine/BoneData.c
		%sokol-samples/libs/spine-c/src/spine/BoundingBoxAttachment.c
		%sokol-samples/libs/spine-c/src/spine/ClippingAttachment.c
		%sokol-samples/libs/spine-c/src/spine/Color.c
		%sokol-samples/libs/spine-c/src/spine/Debug.c
		%sokol-samples/libs/spine-c/src/spine/Event.c
		%sokol-samples/libs/spine-c/src/spine/EventData.c
		%sokol-samples/libs/spine-c/src/spine/extension.c
		%sokol-samples/libs/spine-c/src/spine/IkConstraint.c
		%sokol-samples/libs/spine-c/src/spine/IkConstraintData.c
		%sokol-samples/libs/spine-c/src/spine/Json.c
		%sokol-samples/libs/spine-c/src/spine/MeshAttachment.c
		%sokol-samples/libs/spine-c/src/spine/PathAttachment.c
		%sokol-samples/libs/spine-c/src/spine/PathConstraint.c
		%sokol-samples/libs/spine-c/src/spine/PathConstraintData.c
		%sokol-samples/libs/spine-c/src/spine/PhysicsConstraint.c
		%sokol-samples/libs/spine-c/src/spine/PhysicsConstraintData.c
		%sokol-samples/libs/spine-c/src/spine/PointAttachment.c
		%sokol-samples/libs/spine-c/src/spine/RegionAttachment.c
		%sokol-samples/libs/spine-c/src/spine/Sequence.c
		%sokol-samples/libs/spine-c/src/spine/Skeleton.c
		%sokol-samples/libs/spine-c/src/spine/SkeletonBinary.c
		%sokol-samples/libs/spine-c/src/spine/SkeletonBounds.c
		%sokol-samples/libs/spine-c/src/spine/SkeletonClipping.c
		%sokol-samples/libs/spine-c/src/spine/SkeletonData.c
		%sokol-samples/libs/spine-c/src/spine/SkeletonJson.c
		%sokol-samples/libs/spine-c/src/spine/Skin.c
		%sokol-samples/libs/spine-c/src/spine/Slot.c
		%sokol-samples/libs/spine-c/src/spine/SlotData.c
		%sokol-samples/libs/spine-c/src/spine/TransformConstraint.c
		%sokol-samples/libs/spine-c/src/spine/TransformConstraintData.c
		%sokol-samples/libs/spine-c/src/spine/Triangulator.c
		%sokol-samples/libs/spine-c/src/spine/VertexAttachment.c
	]
	include: %sokol-samples/libs/spine-c/include/
	file: %sokol-samples/libs/stb/stb_image.c
	file: %sokol-samples/libs/util/fileutil.c
]

common-modplug: [
	files: [
        %libmodplug/src/sndmix.cpp
        %libmodplug/src/sndfile.cpp
        %libmodplug/src/snd_fx.cpp
        %libmodplug/src/snd_flt.cpp
        %libmodplug/src/snd_dsp.cpp
        %libmodplug/src/fastmix.cpp
        %libmodplug/src/mmcmp.cpp
        %libmodplug/src/load_xm.cpp
        %libmodplug/src/load_wav.cpp
        %libmodplug/src/load_umx.cpp
        %libmodplug/src/load_ult.cpp
        %libmodplug/src/load_stm.cpp
        %libmodplug/src/load_s3m.cpp
        %libmodplug/src/load_ptm.cpp
        %libmodplug/src/load_okt.cpp
        %libmodplug/src/load_mtm.cpp
        %libmodplug/src/load_mod.cpp
        %libmodplug/src/load_med.cpp
        %libmodplug/src/load_mdl.cpp
        %libmodplug/src/load_it.cpp
        %libmodplug/src/load_far.cpp
        %libmodplug/src/load_dsm.cpp
        %libmodplug/src/load_dmf.cpp
        %libmodplug/src/load_dbm.cpp
        %libmodplug/src/load_ams.cpp
        %libmodplug/src/load_amf.cpp
        %libmodplug/src/load_669.cpp
        %libmodplug/src/load_j2b.cpp
        %libmodplug/src/load_mt2.cpp
        %libmodplug/src/load_psm.cpp
        %libmodplug/src/load_abc.cpp
        %libmodplug/src/load_mid.cpp
        %libmodplug/src/load_pat.cpp
        %libmodplug/src/modplug.cpp
	]
	include: %libmodplug/src/
	include: %libmodplug/src/libmodplug/
	;define: MODPLUG_BUILD=1
]

target-arm64: [
	arch: arm64
	;flags: ["-arch arm64"]
	flags: "-target arm64-apple-darwin"
	define: _FILE_OFFSET_BITS=64
	define: __LP64__ ; has long (integer) 64 bits
	define: __arm64__
	define: TO_OSX_X64
]

common-sapp: [
	includes: [
		%sokol-samples/libs/sokol/
		%sokol-samples/libs/
		%sokol/util/
		;%tmp/glsl/
	]
	#if Windows? [
		file: %sokol-samples/libs/sokol/sokol.c
		includes: [
			%tmp/hlsl5/
			;Official mingw distro seems not to be up to date
			;%/x/MingW/mingw-w64-headers/direct-x/include/ 
			;Headers above downloaded from: https://sourceforge.net/p/mingw-w64/mingw-w64/ci/master/tarball?path=/mingw-w64-headers
		]
		libs: [%D3D11  %uuid  %Ole32] ;%d3dx11_43 %d3dcompiler_43
		defines: [
			SOKOL_D3D11 SOKOL_HLSL5
			_WIN32_WINNT=0x0600
		]
		flags: [-mwindows]
	]
	#if macOS? [
		file: %sokol-samples/libs/sokol/sokol.m
		defines: [
			SOKOL_METAL
		]
		includes: [
			%tmp/metal_macos/
		]
		:target-arm64
		frameworks: [
			AudioToolbox
			CoreFoundation
			CoreGraphics
			QuartzCore
			Metal
			MetalKit
			AppKit
		]
	]
]

ozz-anim: [
	file:    %sokol-samples/libs/ozzanim/src/ozz_animation.cc
	file:    %sokol-samples/libs/ozzanim/src/ozz_base.cc
	file:    %sokol-samples/libs/ozzanim/src/mesh.cc
	include: %sokol-samples/libs/ozzanim/include/

	file:    %sokol-samples/libs/ozzutil/ozzutil.cc
	include: %sokol-samples/libs/ozzutil/
]

file-util: [
	include: %sokol-samples/libs/util/
	#either macOS? [
		file: %sokol-samples/libs/util/fileutil_osx.m
	][
		file: %sokol-samples/libs/util/fileutil.c
	]
]

eggs: [
;;	"Sokol WebAssembly - Texture array" [
;;		:common-emsc
;;		name: %wasm/arraytex
;;		file: %sokol-samples/html5/arraytex-emsc.c
;;	]
;;	"Sokol WebAssembly - Blend" [
;;		:common-emsc
;;		name: %wasm/blend
;;		file: %sokol-samples/html5/blend-emsc.c
;;	]
;;	"Sokol WebAssembly - Clear" [
;;		:common-emsc
;;		name: %wasm/clear
;;		file: %sokol-samples/html5/clear-emsc.c
;;	]
;;	"Sokol WebAssembly - Cube" [
;;		:common-emsc
;;		name: %wasm/cube
;;		file: %sokol-samples/html5/cube-emsc.c
;;	]
;;	"Sokol WebAssembly - updating texture per-frame with CPU generated data" [
;;		:common-emsc
;;		name: %wasm/dyntex
;;		file: %sokol-samples/html5/dyntex-emsc.c
;;	]
;;	"Sokol WebAssembly - injecting native GL buffer and image resources" [
;;		:common-emsc
;;		name: %wasm/inject
;;		file: %sokol-samples/html5/inject-emsc.c
;;	]
;;	"Sokol WebAssembly - Instanced rendering, static geometry vertex- and index-buffers, dynamically updated instance-data buffer" [
;;		:common-emsc
;;		name: %wasm/instancing
;;		file: %sokol-samples/html5/instancing-emsc.c
;;	]
;;	"Sokol WebAssembly - Test mipmapping behaviour" [
;;		:common-emsc
;;		name: %wasm/mipmap
;;		file: %sokol-samples/html5/mipmap-emsc.c
;;	]
;;	"Sokol WebAssembly - Multiple-render-target sample" [
;;		:common-emsc
;;		name: %wasm/mrt
;;		file: %sokol-samples/html5/mrt-emsc.c
;;	]
;;	"Sokol WebAssembly - Simple offscreen rendering" [
;;		:common-emsc
;;		name: %wasm/offscreen
;;		file: %sokol-samples/html5/offscreen-emsc.c
;;	]
;;	"Sokol WebAssembly - Indexed drawing, explicit vertex attr locations" [
;;		:common-emsc
;;		name: %wasm/quad
;;		file: %sokol-samples/html5/quad-emsc.c
;;	]
;;	"Sokol WebAssembly - Textured cube" [
;;		:common-emsc
;;		name: %wasm/texcube
;;		file: %sokol-samples/html5/texcube-emsc.c
;;	]
;;	"Sokol WebAssembly - Triangle" [
;;		:common-emsc
;;		name: %wasm/triangle
;;		file: %sokol-samples/html5/triangle-emsc.c
;;	]
;;
;;
;;
;;	"Sokol D3D11 - Texture array" [
;;		name: %d3d11-arraytex
;;		file: %sokol-samples/d3d11/arraytex-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Binshader - Using HLSL shader bytecode with D3D11 backend." [
;;		name: %d3d11-binshader
;;		file: %sokol-samples/d3d11/binshader-d3d11.c
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Blend" [
;;		name: %d3d11-blend
;;		file: %sokol-samples/d3d11/blend-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Render separate geometries in vertex- and index-buffers with buffer offsets" [
;;		name: %d3d11-bufferoffsets
;;		file: %sokol-samples/d3d11/bufferoffsets-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Clear" [
;;		name: %d3d11-clear
;;		file: %sokol-samples/d3d11/clear-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Cube" [
;;		name: %d3d11-cube
;;		file: %sokol-samples/d3d11/cube-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - updating texture per-frame with CPU generated data" [
;;		name: %d3d11-dyntex
;;		file: %sokol-samples/d3d11/dyntex-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - injecting native GL buffer and image resources" [
;;		name: %d3d11-inject
;;		file: %sokol-samples/d3d11/inject-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Instanced rendering, static geometry vertex- and index-buffers, dynamically updated instance-data buffer" [
;;		name: %d3d11-instancing
;;		file: %sokol-samples/d3d11/instancing-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Test mipmapping behaviour" [
;;		name: %d3d11-mipmap
;;		file: %sokol-samples/d3d11/mipmap-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Multiple-render-target sample" [
;;		name: %d3d11-mrt
;;		file: %sokol-samples/d3d11/mrt-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Simple offscreen rendering" [
;;		name: %d3d11-offscreen
;;		file: %sokol-samples/d3d11/offscreen-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Indexed drawing, explicit vertex attr locations" [
;;		name: %d3d11-quad
;;		file: %sokol-samples/d3d11/quad-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Textured cube" [
;;		name: %d3d11-texcube
;;		file: %sokol-samples/d3d11/texcube-d3d11
;;		:common-d3d11
;;	]
;;	"Sokol D3D11 - Triangle" [
;;		name: %d3d11-triangle
;;		file: %sokol-samples/d3d11/triangle-d3d11
;;		:common-d3d11
;;	]
;;
;;
;;	"Sokol GLFW - Texture array" [
;;		name: %glfw-arraytex
;;		file: %sokol-samples/glfw/arraytex-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Blend" [
;;		name: %glfw-blend
;;		file: %sokol-samples/glfw/blend-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Render separate geometries in vertex- and index-buffers with buffer offsets" [
;;		name: %glfw-bufferoffsets
;;		file: %sokol-samples/glfw/bufferoffsets-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Clear" [
;;		name: %glfw-clear
;;		file: %sokol-samples/glfw/clear-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Cube" [
;;		name: %glfw-cube
;;		file: %sokol-samples/glfw/cube-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - updating texture per-frame with CPU generated data" [
;;		name: %glfw-dyntex
;;		file: %sokol-samples/glfw/dyntex-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - injecting native GL buffer and image resources" [
;;		name: %glfw-inject
;;		file: %sokol-samples/glfw/inject-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Instanced rendering, static geometry vertex- and index-buffers, dynamically updated instance-data buffer" [
;;		name: %glfw-instancing
;;		file: %sokol-samples/glfw/instancing-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Test mipmapping behaviour" [
;;		name: %glfw-mipmap
;;		file: %sokol-samples/glfw/mipmap-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Multiple-render-target sample" [
;;		name: %glfw-mrt
;;		file: %sokol-samples/glfw/mrt-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - How to use sokol-gfx with multiple GLFW windows and GL contexts." [
;;		name: %glfw-multiwindow
;;		file: %sokol-samples/glfw/multiwindow-glfw.c
;;		:common-glfw
;;	]
;;	"Sokol GLFW - noninterleaved - How to use non-interleaved vertex data" [
;;		name: %glfw-noninterleaved
;;		file: %sokol-samples/glfw/noninterleaved-glfw.c
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Simple offscreen rendering" [
;;		name: %glfw-offscreen
;;		file: %sokol-samples/glfw/offscreen-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Indexed drawing, explicit vertex attr locations" [
;;		name: %glfw-quad
;;		file: %sokol-samples/glfw/quad-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Textured cube" [
;;		name: %glfw-texcube
;;		file: %sokol-samples/glfw/texcube-glfw
;;		:common-glfw
;;	]
;;	"Sokol GLFW - Triangle" [
;;		name: %glfw-triangle
;;		file: %sokol-samples/glfw/triangle-glfw
;;		:common-glfw
;;	]
;;
;;	"Test triangle D3D11" [
;;		name: %test-triangle-d3d11
;;		file: %src/triangle.c
;;		includes: [%src/]
;;		:common-d3d11
;;	]
;;	"Test triangle GLFW" [
;;		name: %test-triangle-glfw
;;		file: %src/triangle
;;		includes: [%src/]
;;		:common-glfw
;;	]

	
	"SAPP Arraytex" [
		:common-sapp
		name: %sapp-arraytex
		file: %sokol-samples/sapp/arraytex-sapp.c
	]
	"SAPP Basisu - demo of how to use Basis Universal textures" [
		:common-sapp
		name: %sapp-basisu
		file: %sokol-samples/sapp/basisu-sapp.c
		file: %sokol-samples/libs/basisu/sokol_basisu.cpp
	]
	"SAPP Blend" [
		:common-sapp
		name: %sapp-blend
		file: %sokol-samples/sapp/blend-sapp.c
	]
	"SAPP Blend-op" [
		:common-sapp
		name: %sapp-blend-op
		file: %sokol-samples/sapp/blend-op-sapp.c
	]
	"SAPP Bufferoffsets" [
		:common-sapp
		name: %sapp-bufferoffsets
		file: %sokol-samples/sapp/bufferoffsets-sapp.c
	]
	"SAPP cGLTF - A simple(!) GLTF viewer" [
		:common-sapp
		:common-basisu
		name: %sapp-cgltf
		file: %sokol-samples/libs/stb/stb_image.c
		file: %sokol-samples/sapp/cgltf-sapp.c
		file: %sokol-samples/libs/util/fileutil.c
	]
	"SAPP Clear" [
		:common-sapp
		name: %sapp-clear
		file: %sokol-samples/sapp/clear-sapp.c
	]
	"SAPP ComputeBoits" [
		:common-sapp
		:common-cimgui
		name: %sapp-computeboids
		file: %sokol-samples/sapp/computeboids-sapp.c
	]
	"SAPP Cube" [
		:common-sapp
		name: %sapp-cube
		file: %sokol-samples/sapp/cube-sapp.c
	]
	"SAPP Cubemaprt JPEG" [
		:common-sapp
		name: %sapp-cubemaprt-jpeg
		file: %sokol-samples/libs/util/fileutil.c
		file: %sokol-samples/libs/stb/stb_image.c
		file: %sokol-samples/sapp/cubemap-jpeg-sapp.c
	]
	"SAPP Cubemaprt" [
		:common-sapp
		name: %sapp-cubemaprt
		file: %sokol-samples/sapp/cubemaprt-sapp.c
	]
	"SAPP Cursor" [
		:common-sapp
		:common-cimgui
		name: %sapp-cursor
		file: %sokol-samples/sapp/cursor-sapp.cc
	]
	"SAPP Custom resolve" [
		:common-sapp
		:common-cimgui
		name: %sapp-customresolve
		file: %sokol-samples/sapp/customresolve-sapp.c
	]
	"SAPP Debugtext-context - Demonstrate rendering to offscreen render targets with contexts." [
		:common-sapp
		name: %sapp-debugtext-context
		file: %sokol-samples/sapp/debugtext-context-sapp.c
	]
	"SAPP Debugtext-layers - Demonstrates layered rendering" [
		:common-sapp
		name: %sapp-debugtext-layers
		file: %sokol-samples/sapp/debugtext-layers-sapp.c
	]
	"SAPP Debugtext-printf - Simple text rendering with sokol_debugtext.h, formatting, tabs, etc..." [
		:common-sapp
		name: %sapp-debugtext-printf
		file: %sokol-samples/sapp/debugtext-printf-sapp.c
	]
	"SAPP Debugtext - Text rendering with sokol_debugtext.h, test builtin fonts." [
		:common-sapp
		name: %sapp-debugtext
		file: %sokol-samples/sapp/debugtext-sapp.c
	]
	"SAPP Debugtext-userfont - render with user-provided font data (Atari 400 ROM extract)" [
		:common-sapp
		name: %sapp-debugtext-userfont
		file: %sokol-samples/sapp/debugtext-userfont-sapp.c
	]
	"SAPP DrawCall Performance" [
		:common-sapp
		:common-cimgui
		name: %sapp-drawcallperf
		file: %sokol-samples/sapp/drawcallperf-sapp.c
	]
	"SAPP Droptest - Test drag'n'drop file loading." [
		:common-sapp
		:common-cimgui
		name: %sapp-droptest
		file: %sokol-samples/sapp/droptest-sapp.c
	]
	"SAPP Dyntex - Update dynamic texture with CPU-generated data each frame" [
		:common-sapp
		name: %sapp-dyntex
		file: %sokol-samples/sapp/dyntex-sapp.c
	]
	"SAPP Dyntex3D - Update dynamic 3D texture with CPU-generated data each frame" [
		:common-sapp
		:common-cimgui
		name: %sapp-dyntex3d
		file: %sokol-samples/sapp/dyntex3d-sapp.c
	]
	"SAPP Events" [
		:common-sapp
		:common-imgui
		name: %sapp-events
		file: %sokol-samples/sapp/events-sapp.cc
		flags: [-mconsole]
		#if Windows? [library: %gdi32]
	]
	"SAPP Fontstash" [
		:common-sapp
		name: %sapp-fontstash
		file: %sokol-samples/sapp/fontstash-sapp.c
		file: %sokol-samples/libs/util/fileutil.c
	]
	"SAPP Fontstash layers" [
		:common-sapp
		name: %sapp-fontstash-layers
		file: %sokol-samples/sapp/fontstash-layers-sapp.c
		file: %sokol-samples/libs/util/fileutil.c
	]
	"SAPP Icon" [
		:common-sapp
		name: %sapp-icon
		file: %sokol-samples/sapp/icon-sapp.c
	]
	"SAPP ImageBlur" [
		:common-sapp
		:common-cimgui
		name: %sapp-imageblur
		file: %sokol-samples/sapp/imageblur-sapp.c
		file: %sokol-samples/libs/util/fileutil.c
		file: %sokol-samples/libs/stb/stb_image.c
	]
	"SAPP imGui dock" [
		:common-sapp
		:common-imgui-dock
		name: %sapp-imgui-dock
		file: %sokol-samples/sapp/imgui-dock-sapp.cc
		file: %dcimgui/src-docking/imgui_demo.cpp
	]
	"SAPP imGui hiDPI" [
		:common-sapp
		:common-imgui
		name: %sapp-imgui-highdpi
		file: %sokol-samples/sapp/imgui-highdpi-sapp.cc
		file: %dcimgui/src/imgui_demo.cpp
	]
	"SAPP imGui images - How to use sokol-gfx images and sampler with Dear ImGui" [
		:common-sapp
		:common-cimgui
		name: %sapp-imgui-images
		file: %sokol-samples/sapp/imgui-images-sapp.c
	]
	"SAPP imGui" [
		:common-sapp
		:common-imgui
		name: %sapp-imgui
		file: %sokol-samples/sapp/imgui-sapp.cc
		file: %dcimgui/src/imgui_demo.cpp
	]
	"SAPP imGui UserCallback" [
		:common-sapp
		:common-cimgui
		name: %sapp-imgui-usercallback
		file: %sokol-samples/sapp/imgui-usercallback-sapp.c
	]
	"SAPP Instancing" [
		:common-sapp
		name: %sapp-instancing
		file: %sokol-samples/sapp/instancing-sapp.c
	]
	"SAPP Instancing compute" [
		:common-sapp
		name: %sapp-instancing-compute
		file: %sokol-samples/sapp/instancing-compute-sapp.c
	]
	"SAPP Instancing pull" [
		:common-sapp
		name: %sapp-instancing-pull
		file: %sokol-samples/sapp/instancing-pull-sapp.c
	]
	"SAPP LayerRender" [
		:common-sapp
		name: %sapp-layerrender
		file: %sokol-samples/sapp/layerrender-sapp.c
	]
	"SAPP Load PNG" [
		:common-sapp
		name: %sapp-loadpng
		file: %sokol-samples/sapp/loadpng-sapp.c
		file: %sokol-samples/libs/stb/stb_image.c
		file: %sokol-samples/libs/util/fileutil.c
	]
	"SAPP Mipmap" [
		:common-sapp
		name: %sapp-mipmap
		file: %sokol-samples/sapp/mipmap-sapp.c
	]
	"SAPP MipRender" [
		:common-sapp
		name: %sapp-miprender
		file: %sokol-samples/sapp/miprender-sapp.c
	]
	"SAPP Multi render targets" [
		:common-sapp
		name: %sapp-mrt
		file: %sokol-samples/sapp/mrt-sapp.c
	]
	"SAPP Multi render targets pixelformats" [
		:common-sapp
		name: %sapp-mrt-pixelformats
		file: %sokol-samples/sapp/mrt-pixelformats-sapp.c
	]
	"SAPP noentry" [
		:common-sapp
		name: %sapp-noentry
		file: %sokol-samples/sapp/noentry-sapp.c
		defines: SOKOL_NO_ENTRY
		#if Windows? [defines: _WIN32]
	]
	"SAPP Noninterleaved" [
		:common-sapp
		name: %sapp-noninterleaved
		file: %sokol-samples/sapp/noninterleaved-sapp.c
	]
	;nuklear-images
	;nuklear
	"SAPP offscreen" [
		:common-sapp
		name: %sapp-offscreen
		file: %sokol-samples/sapp/offscreen-sapp.c
	]
	"SAPP offscreen msaa" [
		:common-sapp
		name: %sapp-offscreen-msaa
		file: %sokol-samples/sapp/offscreen-msaa-sapp.c
	]
	"SAPP ozz-anim" [
		:common-sapp
		:common-imgui
		:ozz-anim
		:file-util
		name: %sapp-ozz-anim
		file: %sokol-samples/sapp/ozz-anim-sapp.cc
	]
	"SAPP ozz-skin" [
		:common-sapp
		:common-imgui
		:ozz-anim
		:file-util
		name: %sapp-ozz-skin
		file: %sokol-samples/sapp/ozz-skin-sapp.cc
	]
	"SAPP ozz-storagebuffer" [
		:common-sapp
		:common-imgui
		:ozz-anim
		:file-util
		name: %sapp-ozz-storagebuffer
		file: %sokol-samples/sapp/ozz-storagebuffer-sapp.cc
	]
	"SAPP pixelformats" [
		:common-sapp
		:common-cimgui
		name: %sapp-pixelformats
		file: %sokol-samples/sapp/pixelformats-sapp.c
	]
	"SAPP plmpeg" [
		:common-sapp
		;:common-dbgui
		name: %sapp-plmpeg
		file: %sokol-samples/sapp/plmpeg-sapp.c
		file: %sokol-samples/libs/util/fileutil.c
	]
	"SAPP Primtypes - Test/demonstrate the various primitive types" [
		:common-sapp
		;:common-dbgui
		name: %sapp-primtypes
		file: %sokol-samples/sapp/primtypes-sapp.c
	]
	"SAPP Quad" [
		:common-sapp
		name: %sapp-quad
		file: %sokol-samples/sapp/quad-sapp.c
	]
	"SAPP Restart" [
		:common-sapp
		:common-modplug
		define: MODPLUG_STATIC
		name: %sapp-restart
		file: %sokol-samples/libs/util/fileutil.c
		file: %sokol-samples/libs/stb/stb_image.c
		file: %sokol-samples/sapp/restart-sapp.c
	]
	"SAPP sAudio" [
		:common-sapp
		name: %sapp-saudio
		file: %sokol-samples/sapp/saudio-sapp.c
	]
	"SAPP sbuftex" [
		:common-sapp
		name: %sapp-sbuftex
		file: %sokol-samples/sapp/sbuftex-sapp.c
	]
	"SAPP sdf" [
		:common-sapp
		name: %sapp-sdf
		file: %sokol-samples/sapp/sdf-sapp.c
	]
	"SAPP sgl-context" [
		:common-sapp
		name: %sapp-sgl-context
		file: %sokol-samples/sapp/sgl-context-sapp.c
	]
	"SAPP sgl-lines" [
		:common-sapp
		name: %sapp-sgl-lines
		file: %sokol-samples/sapp/sgl-lines-sapp.c
	]
	"SAPP sgl-microui" [
		:common-sapp
		name: %sapp-sgl-microui
		file: %sokol-samples/sapp/sgl-microui-sapp.c
		file: %sokol-samples/libs/microui/microui.c
	]
	"SAPP sgl-points" [
		:common-sapp
		name: %sapp-sgl-points
		file: %sokol-samples/sapp/sgl-points-sapp.c
	]
	"SAPP sgl" [
		:common-sapp
		name: %sapp-sgl
		file: %sokol-samples/sapp/sgl-sapp.c
	]
	"SAPP Shadows" [
		:common-sapp
		name: %sapp-shadows
		file: %sokol-samples/sapp/shadows-sapp.c
	]
	"SAPP Shadows DepthTex" [
		:common-sapp
		name: %sapp-shadows-depthtex
		file: %sokol-samples/sapp/shadows-depthtex-sapp.c
	]
	"SAPP Shapes" [
		:common-sapp
		name: %sapp-shapes
		file: %sokol-samples/sapp/shapes-sapp.c
	]
	"SAPP Shapes transform" [
		:common-sapp
		name: %sapp-shapes-transform
		file: %sokol-samples/sapp/shapes-transform-sapp.c
	]
	"SAPP Shared Bindings" [
		:common-sapp
		name: %sapp-shared-bindings
		file: %sokol-samples/sapp/shared-bindings-sapp.c
	]
;	"SAPP shdfeatures" [
;		:common-sapp
;		:common-cimgui
;		name: %sapp-shdfeatures
;		file: %sokol-samples/sapp/shdfeatures-sapp.c
;	]
	;spine....
	"SAPP Spine context" [
		:common-sapp
		:common-spine
		name: %sapp-spine-contexts
		file: %sokol-samples/sapp/spine-contexts-sapp.c
	]
	"SAPP Spine inspector" [
		:common-sapp
		:common-spine
		:common-cimgui
		name: %sapp-spine-inspector
		file: %sokol-samples/sapp/spine-inspector-sapp.c
	]
	"SAPP Spine layers" [
		:common-sapp
		:common-spine
		name: %sapp-spine-layers
		file: %sokol-samples/sapp/spine-layers-sapp.c
	]
	"SAPP Spine simple" [
		:common-sapp
		:common-spine
		name: %sapp-spine-simple
		file: %sokol-samples/sapp/spine-simple-sapp.c
	]
	"SAPP Spine skinsets" [
		:common-sapp
		:common-spine
		name: %sapp-spine-skinsets
		file: %sokol-samples/sapp/spine-skinsets-sapp.c
	]
	"SAPP Spine switch skinsets" [
		:common-sapp
		:common-spine
		name: %sapp-spine-switch-skinsets
		file: %sokol-samples/sapp/spine-switch-skinsets-sapp.c
	]

	"SAPP tex3d" [
		:common-sapp
		name: %sapp-tex3d
		file: %sokol-samples/sapp/tex3d-sapp.c
	]
	"SAPP Texture creation and rendering" [
		:common-sapp
		name: %sapp-texcube
		file: %sokol-samples/sapp/texcube-sapp.c
	]
	"SAPP Texture view" [
		:common-sapp
		:common-cimgui
		:file-util
		file: %sokol-samples/libs/basisu/sokol_basisu.cpp
		name: %sapp-texview
		file: %sokol-samples/sapp/texview-sapp.c
	]
	"SAPP Triangle" [
		:common-sapp
		name: %sapp-triangle
		file: %sokol-samples/sapp/triangle-sapp.c
	]
	"SAPP Triangle bufferless" [
		:common-sapp
		name: %sapp-triangle-bufferless
		file: %sokol-samples/sapp/triangle-bufferless-sapp.c
	]
	"SAPP uniformtypes" [
		:common-sapp
		name: %sapp-uniformtypes
		file: %sokol-samples/sapp/uniformtypes-sapp.c
	]
	"SAPP uvwrap" [
		:common-sapp
		name: %sapp-uvwrap
		file: %sokol-samples/sapp/uvwrap-sapp.c
	]
	"SAPP vertexindexbuffer" [
		:common-sapp
		name: %sapp-vertexindexbuffer
		file: %sokol-samples/sapp/vertexindexbuffer-sapp.c
	]
	"SAPP vertexpull" [
		:common-sapp
		name: %sapp-vertexpull
		file: %sokol-samples/sapp/vertexpull-sapp.c
	]
;
;		"SAPP Cube experiments" [
;			:common-sapp
;			name: %sapp-cube-exp
;			file: %src/sapp-cube.c
;			flags: [-mconsole]
;		]

	"Generate shader includes" [
		do %generate-shaders.r3
	]

	"Update gits" [
		cmd %sokol/ {git pull}
		cmd %sokol-samples/ {git pull}
		cmd %sokol-tools-bin/ {git pull}
		cmd %cimgui-sokol-starterkit/ {git pull}
	]
	"cimgui demo" [
		:common-cimgui
		name:    %cimgui-demo
		file:    %cimgui-sokol-starterkit/demo.c
		file:    %cimgui-sokol-starterkit/sokol/sokol.c
		include: %cimgui-sokol-starterkit/sokol/
	]
]
